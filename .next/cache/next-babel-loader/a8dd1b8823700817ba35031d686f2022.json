{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport { Axios, serverAxios } from './request';\nconst GET_LIST = 'INDEX/GET_GOLD_LIST';\n\nconst changGoldList = list => ({\n  type: GET_LIST,\n  list\n});\n\nexport const getGoldList = () => {\n  //  const  HttpGet = server?serverAxios:Axios;\n  return (dispatch, getState, $axios) => {\n    //http://localhost:9090\n    return $axios.get('/resources/gold').then(res => {\n      const {\n        list\n      } = res.data;\n      dispatch(changGoldList(list));\n    });\n  };\n};\nexport const getGitList = () => {\n  //  const  HttpGet = server?serverAxios:Axios;\n  return (dispatch, getState, $axios) => {\n    //http://localhost:9090\n    return $axios.get('/resources/github').then(res => {\n      const {\n        list\n      } = res.data;\n      dispatch(changeList(list));\n    });\n  };\n};\nconst exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0\n};\nexport const actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET'\n}; // REDUCERS\n\nexport const reducer = (state = exampleInitialState, action) => {\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case GET_LIST:\n      return _Object$assign({}, state, {\n        GOLD_LIST: action.list\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport const serverRenderClock = isServer => dispatch => {\n  return dispatch({\n    type: actionTypes.TICK,\n    light: !isServer,\n    ts: _Date$now()\n  });\n};\nexport const startClock = dispatch => {\n  return setInterval(() => {\n    // Dispatch `TICK` every 1 second\n    dispatch({\n      type: actionTypes.TICK,\n      light: true,\n      ts: _Date$now()\n    });\n  }, 1000);\n};\nexport const incrementCount = () => dispatch => {\n  return dispatch({\n    type: actionTypes.INCREMENT\n  });\n};\nexport const decrementCount = () => dispatch => {\n  return dispatch({\n    type: actionTypes.DECREMENT\n  });\n};\nexport const resetCount = () => dispatch => {\n  return dispatch({\n    type: actionTypes.RESET\n  });\n};\nexport function initializeStore(initialState = exampleInitialState) {\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware, thunk.withExtraArgument(Axios))));\n}","map":{"version":3,"sources":["D:/zcy/20198222/next-xitu/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","Axios","serverAxios","GET_LIST","changGoldList","list","type","getGoldList","dispatch","getState","$axios","get","then","res","data","getGitList","changeList","exampleInitialState","lastUpdate","light","count","actionTypes","TICK","INCREMENT","DECREMENT","RESET","reducer","state","action","ts","GOLD_LIST","serverRenderClock","isServer","startClock","setInterval","incrementCount","decrementCount","resetCount","initializeStore","initialState","thunk","withExtraArgument"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAAWC,KAAX,EAAiBC,WAAjB,QAAmC,WAAnC;AACA,MAAMC,QAAQ,GAAG,qBAAjB;;AACA,MAAMC,aAAa,GAAGC,IAAI,KAAI;AAC5BC,EAAAA,IAAI,EAACH,QADuB;AAE5BE,EAAAA;AAF4B,CAAJ,CAA1B;;AAIA,OAAO,MAAME,WAAW,GAAG,MAAK;AAC9B;AACE,SAAO,CAACC,QAAD,EAAUC,QAAV,EAAmBC,MAAnB,KAA4B;AAC/B;AACA,WAAOA,MAAM,CAACC,GAAP,CAAW,iBAAX,EACNC,IADM,CACDC,GAAG,IAAE;AACN,YAAM;AAACR,QAAAA;AAAD,UAASQ,GAAG,CAACC,IAAnB;AACAN,MAAAA,QAAQ,CAACJ,aAAa,CAACC,IAAD,CAAd,CAAR;AACJ,KAJM,CAAP;AAKH,GAPD;AAQH,CAVM;AAWP,OAAO,MAAMU,UAAU,GAAG,MAAK;AAC7B;AACE,SAAO,CAACP,QAAD,EAAUC,QAAV,EAAmBC,MAAnB,KAA4B;AAC/B;AACA,WAAOA,MAAM,CAACC,GAAP,CAAW,mBAAX,EACNC,IADM,CACDC,GAAG,IAAE;AACN,YAAM;AAACR,QAAAA;AAAD,UAASQ,GAAG,CAACC,IAAnB;AACAN,MAAAA,QAAQ,CAACQ,UAAU,CAACX,IAAD,CAAX,CAAR;AACJ,KAJM,CAAP;AAKH,GAPD;AAQH,CAVM;AAYP,MAAMY,mBAAmB,GAAG;AAC1BC,EAAAA,UAAU,EAAE,CADc;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,KAAK,EAAE;AAHmB,CAA5B;AAMA,OAAO,MAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,SAAS,EAAE,WAFc;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAApB,C,CAOP;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGV,mBAAT,EAA8BW,MAA9B,KAAyC;AAC9D,UAAQA,MAAM,CAACtB,IAAf;AACE,SAAKe,WAAW,CAACC,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBK,KAAlB,EAAyB;AAC9BT,QAAAA,UAAU,EAAEU,MAAM,CAACC,EADW;AAE9BV,QAAAA,KAAK,EAAE,CAAC,CAACS,MAAM,CAACT;AAFc,OAAzB,CAAP;;AAIF,SAAKE,WAAW,CAACE,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBI,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKC,WAAW,CAACG,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBG,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKC,WAAW,CAACI,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBE,KAAlB,EAAyB;AAC9BP,QAAAA,KAAK,EAAEH,mBAAmB,CAACG;AADG,OAAzB,CAAP;;AAGF,SAAKjB,QAAL;AACE,aAAO,eAAc,EAAd,EAAkBwB,KAAlB,EAAyB;AAC9BG,QAAAA,SAAS,EAAEF,MAAM,CAACvB;AADY,OAAzB,CAAP;;AAGF;AAAS,aAAOsB,KAAP;AAtBX;AAwBD,CAzBM,C,CA2BP;;AACA,OAAO,MAAMI,iBAAiB,GAAIC,QAAD,IAAcxB,QAAQ,IAAI;AACzD,SAAOA,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAEe,WAAW,CAACC,IAApB;AAA0BH,IAAAA,KAAK,EAAE,CAACa,QAAlC;AAA4CH,IAAAA,EAAE,EAAE;AAAhD,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,MAAMI,UAAU,GAAGzB,QAAQ,IAAI;AACpC,SAAO0B,WAAW,CAAC,MAAM;AACvB;AACA1B,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAEe,WAAW,CAACC,IAApB;AAA0BH,MAAAA,KAAK,EAAE,IAAjC;AAAuCU,MAAAA,EAAE,EAAE;AAA3C,KAAD,CAAR;AACD,GAHiB,EAGf,IAHe,CAAlB;AAID,CALM;AAOP,OAAO,MAAMM,cAAc,GAAG,MAAM3B,QAAQ,IAAI;AAC9C,SAAOA,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAEe,WAAW,CAACE;AAApB,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,MAAMa,cAAc,GAAG,MAAM5B,QAAQ,IAAI;AAC9C,SAAOA,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAEe,WAAW,CAACG;AAApB,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,MAAMa,UAAU,GAAG,MAAM7B,QAAQ,IAAI;AAC1C,SAAOA,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAEe,WAAW,CAACI;AAApB,GAAD,CAAf;AACD,CAFM;AAIP,OAAO,SAASa,eAAT,CAA0BC,YAAY,GAAGtB,mBAAzC,EAA8D;AACnE,SAAOpB,WAAW,CAAC6B,OAAD,EAAUa,YAAV,EAAwBxC,mBAAmB,CAACD,eAAe,CAACE,eAAD,EAAiBwC,KAAK,CAACC,iBAAN,CAAwBxC,KAAxB,CAAjB,CAAhB,CAA3C,CAAlB;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport    {Axios,serverAxios} from './request'\r\nconst GET_LIST = 'INDEX/GET_GOLD_LIST'\r\nconst changGoldList = list =>({\r\n  type:GET_LIST,\r\n  list\r\n})\r\nexport const getGoldList = () =>{\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState,$axios)=>{\r\n        //http://localhost:9090\r\n        return $axios.get('/resources/gold')\r\n        .then(res=>{\r\n             const {list} = res.data\r\n             dispatch(changGoldList(list))\r\n        })\r\n    }\r\n}\r\nexport const getGitList = () =>{\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState,$axios)=>{\r\n        //http://localhost:9090\r\n        return $axios.get('/resources/github')\r\n        .then(res=>{\r\n             const {list} = res.data\r\n             dispatch(changeList(list))\r\n        })\r\n    }\r\n}\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0\r\n}\r\n\r\nexport const actionTypes = {\r\n  TICK: 'TICK',\r\n  INCREMENT: 'INCREMENT',\r\n  DECREMENT: 'DECREMENT',\r\n  RESET: 'RESET'\r\n}\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    case GET_LIST:\r\n      return Object.assign({}, state, {\r\n        GOLD_LIST: action.list\r\n      })\r\n    default: return state\r\n  }\r\n}\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = (isServer) => dispatch => {\r\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\r\n}\r\n\r\nexport const startClock = dispatch => {\r\n  return setInterval(() => {\r\n    // Dispatch `TICK` every 1 second\r\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\r\n  }, 1000)\r\n}\r\n\r\nexport const incrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.INCREMENT })\r\n}\r\n\r\nexport const decrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.DECREMENT })\r\n}\r\n\r\nexport const resetCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.RESET })\r\n}\r\n\r\nexport function initializeStore (initialState = exampleInitialState) {\r\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware,thunk.withExtraArgument(Axios))))\r\n}"]},"metadata":{},"sourceType":"module"}