{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport axios from 'axios';\nexport var Axios = axios.create({\n  baseURL: '/api'\n}); //import    {Axios,serverAxios} from './request'\n\nvar jueapi = 'https://extension-ms.juejin.im';\nexport var GET_LIST = 'INDEX/GET_GOLD_LIST';\nexport var GET_GIT_LIST = 'INDEX/GET_GIT_LIST';\nexport var changGoldList = function changGoldList(list) {\n  return {\n    type: GET_LIST,\n    list: list\n  };\n};\nexport var changGitList = function changGitList(list) {\n  return {\n    type: GET_GIT_LIST,\n    list: list\n  };\n};\nexport var getGoldList = function getGoldList(param, isServer) {\n  console.log('getGoldList-------'); //  const  HttpGet = server?serverAxios:Axios;\n\n  return function (dispatch, getState) {\n    //http://localhost:9090\n    var url = '/resources/gold';\n\n    if (isServer) {\n      url = jueapi + url;\n    }\n\n    return Axios.post(url, param).then(function (res) {\n      var data = res.data.data;\n      console.log('-------------');\n      dispatch(changGoldList(data));\n    });\n  };\n};\nexport var getGitList = function getGitList(param) {\n  //  const  HttpGet = server?serverAxios:Axios;\n  return function (dispatch, getState) {\n    //http://localhost:9090\n    return Axios.get('/resources/github').then(function (res) {\n      var list = res.data.list;\n      dispatch(changeList(list));\n    });\n  };\n};\nvar exampleInitialState = {\n  lastUpdate: 0,\n  light: false,\n  count: 0,\n  GOLD_LIST: [],\n  GIT_LIST: []\n};\nexport var actionTypes = {\n  TICK: 'TICK',\n  INCREMENT: 'INCREMENT',\n  DECREMENT: 'DECREMENT',\n  RESET: 'RESET'\n}; // REDUCERS\n\nexport var reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.TICK:\n      return _Object$assign({}, state, {\n        lastUpdate: action.ts,\n        light: !!action.light\n      });\n\n    case actionTypes.INCREMENT:\n      return _Object$assign({}, state, {\n        count: state.count + 1\n      });\n\n    case actionTypes.DECREMENT:\n      return _Object$assign({}, state, {\n        count: state.count - 1\n      });\n\n    case actionTypes.RESET:\n      return _Object$assign({}, state, {\n        count: exampleInitialState.count\n      });\n\n    case GET_LIST:\n      return _Object$assign({}, state, {\n        GOLD_LIST: action.list\n      });\n\n    case GET_GIT_LIST:\n      return _Object$assign({}, state, {\n        GIT_LIST: action.list\n      });\n\n    default:\n      return state;\n  }\n}; // ACTIONS\n\nexport var serverRenderClock = function serverRenderClock(isServer) {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.TICK,\n      light: !isServer,\n      ts: _Date$now()\n    });\n  };\n};\nexport var startClock = function startClock(dispatch) {\n  return setInterval(function () {\n    // Dispatch `TICK` every 1 second\n    dispatch({\n      type: actionTypes.TICK,\n      light: true,\n      ts: _Date$now()\n    });\n  }, 1000);\n};\nexport var incrementCount = function incrementCount() {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.INCREMENT\n    });\n  };\n};\nexport var decrementCount = function decrementCount() {\n  return function (dispatch) {\n    return setInterval(function () {\n      // Dispatch `TICK` every 1 second\n      dispatch({\n        type: actionTypes.DECREMENT\n      });\n    }, 5000);\n  };\n};\nexport var resetCount = function resetCount() {\n  return function (dispatch) {\n    return dispatch({\n      type: actionTypes.RESET\n    });\n  };\n};\nexport function initializeStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : exampleInitialState;\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n}","map":{"version":3,"sources":["D:/zcy/20198222/next-xitu/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","axios","Axios","create","baseURL","jueapi","GET_LIST","GET_GIT_LIST","changGoldList","list","type","changGitList","getGoldList","param","isServer","console","log","dispatch","getState","url","post","then","res","data","getGitList","get","changeList","exampleInitialState","lastUpdate","light","count","GOLD_LIST","GIT_LIST","actionTypes","TICK","INCREMENT","DECREMENT","RESET","reducer","state","action","ts","serverRenderClock","startClock","setInterval","incrementCount","decrementCount","resetCount","initializeStore","initialState"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa;AAChCC,EAAAA,OAAO,EAAE;AADuB,CAAb,CAAd,C,CAGP;;AACA,IAAMC,MAAM,GAAE,gCAAd;AACA,OAAO,IAAMC,QAAQ,GAAG,qBAAjB;AACP,OAAO,IAAMC,YAAY,GAAG,oBAArB;AACP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI;AACnCC,IAAAA,IAAI,EAACJ,QAD8B;AAEnCG,IAAAA,IAAI,EAAJA;AAFmC,GAAJ;AAAA,CAA1B;AAIP,OAAO,IAAME,YAAY,GAAE,SAAdA,YAAc,CAAAF,IAAI;AAAA,SAAI;AACjCC,IAAAA,IAAI,EAACH,YAD4B;AAEjCE,IAAAA,IAAI,EAAJA;AAFiC,GAAJ;AAAA,CAAxB;AAIP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAOC,QAAP,EAAmB;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CACE,oBADF,EAD4C,CAI5C;;AACE,SAAO,UAACC,QAAD,EAAUC,QAAV,EAAsB;AACzB;AACA,QAAIC,GAAG,GAAG,iBAAV;;AACA,QAAGL,QAAH,EAAY;AACVK,MAAAA,GAAG,GAACd,MAAM,GAACc,GAAX;AACD;;AACD,WAAOjB,KAAK,CAACkB,IAAN,CAAWD,GAAX,EAAeN,KAAf,EACNQ,IADM,CACD,UAAAC,GAAG,EAAE;AAAA,UACCC,IADD,GACSD,GAAG,CAACC,IADb,CACCA,IADD;AAENR,MAAAA,OAAO,CAACC,GAAR,CACA,eADA;AAIAC,MAAAA,QAAQ,CAACT,aAAa,CAACe,IAAD,CAAd,CAAR;AACJ,KARM,CAAP;AASH,GAfD;AAgBH,CArBM;AAsBP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACX,KAAD,EAAU;AAClC;AACE,SAAO,UAACI,QAAD,EAAUC,QAAV,EAAsB;AACzB;AACA,WAAOhB,KAAK,CAACuB,GAAN,CAAU,mBAAV,EACNJ,IADM,CACD,UAAAC,GAAG,EAAE;AAAA,UACCb,IADD,GACSa,GAAG,CAACC,IADb,CACCd,IADD;AAENQ,MAAAA,QAAQ,CAACS,UAAU,CAACjB,IAAD,CAAX,CAAR;AACJ,KAJM,CAAP;AAKH,GAPD;AAQH,CAVM;AAYP,IAAMkB,mBAAmB,GAAG;AAC1BC,EAAAA,UAAU,EAAE,CADc;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,KAAK,EAAE,CAHmB;AAI1BC,EAAAA,SAAS,EAAC,EAJgB;AAK1BC,EAAAA,QAAQ,EAAC;AALiB,CAA5B;AAQA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,MADmB;AAEzBC,EAAAA,SAAS,EAAE,WAFc;AAGzBC,EAAAA,SAAS,EAAE,WAHc;AAIzBC,EAAAA,KAAK,EAAE;AAJkB,CAApB,C,CAOP;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAyC;AAAA,MAAxCC,KAAwC,uEAAhCZ,mBAAgC;AAAA,MAAXa,MAAW;;AAC9D,UAAQA,MAAM,CAAC9B,IAAf;AACE,SAAKuB,WAAW,CAACC,IAAjB;AACE,aAAO,eAAc,EAAd,EAAkBK,KAAlB,EAAyB;AAC9BX,QAAAA,UAAU,EAAEY,MAAM,CAACC,EADW;AAE9BZ,QAAAA,KAAK,EAAE,CAAC,CAACW,MAAM,CAACX;AAFc,OAAzB,CAAP;;AAIF,SAAKI,WAAW,CAACE,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBI,KAAlB,EAAyB;AAC9BT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKG,WAAW,CAACG,SAAjB;AACE,aAAO,eAAc,EAAd,EAAkBG,KAAlB,EAAyB;AAC9BT,QAAAA,KAAK,EAAES,KAAK,CAACT,KAAN,GAAc;AADS,OAAzB,CAAP;;AAGF,SAAKG,WAAW,CAACI,KAAjB;AACE,aAAO,eAAc,EAAd,EAAkBE,KAAlB,EAAyB;AAC9BT,QAAAA,KAAK,EAAEH,mBAAmB,CAACG;AADG,OAAzB,CAAP;;AAGF,SAAKxB,QAAL;AACE,aAAO,eAAc,EAAd,EAAkBiC,KAAlB,EAAyB;AAC9BR,QAAAA,SAAS,EAAES,MAAM,CAAC/B;AADY,OAAzB,CAAP;;AAGF,SAAKF,YAAL;AACI,aAAO,eAAc,EAAd,EAAkBgC,KAAlB,EAAyB;AAC9BP,QAAAA,QAAQ,EAAEQ,MAAM,CAAC/B;AADa,OAAzB,CAAP;;AAGJ;AACG,aAAO8B,KAAP;AA3BL;AA6BD,CA9BM,C,CAgCP;;AACA,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC5B,QAAD;AAAA,SAAc,UAAAG,QAAQ,EAAI;AACzD,WAAOA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAEuB,WAAW,CAACC,IAApB;AAA0BL,MAAAA,KAAK,EAAE,CAACf,QAAlC;AAA4C2B,MAAAA,EAAE,EAAE;AAAhD,KAAD,CAAf;AACD,GAFgC;AAAA,CAA1B;AAIP,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAAA1B,QAAQ,EAAI;AACpC,SAAO2B,WAAW,CAAC,YAAM;AACvB;AACA3B,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAEuB,WAAW,CAACC,IAApB;AAA0BL,MAAAA,KAAK,EAAE,IAAjC;AAAuCY,MAAAA,EAAE,EAAE;AAA3C,KAAD,CAAR;AACD,GAHiB,EAGf,IAHe,CAAlB;AAID,CALM;AAOP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAAA5B,QAAQ,EAAI;AAC9C,WAAOA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAEuB,WAAW,CAACE;AAApB,KAAD,CAAf;AACD,GAF6B;AAAA,CAAvB;AAIP,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAAA7B,QAAQ,EAAI;AAC9C,WAAO2B,WAAW,CAAC,YAAM;AACvB;AACA3B,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAEuB,WAAW,CAACG;AAApB,OAAD,CAAR;AACD,KAHiB,EAGf,IAHe,CAAlB;AAID,GAL6B;AAAA,CAAvB;AAOP,OAAO,IAAMW,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAA9B,QAAQ,EAAI;AAC1C,WAAOA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAEuB,WAAW,CAACI;AAApB,KAAD,CAAf;AACD,GAFyB;AAAA,CAAnB;AAIP,OAAO,SAASW,eAAT,GAA8D;AAAA,MAApCC,YAAoC,uEAArBtB,mBAAqB;AACnE,SAAO9B,WAAW,CAACyC,OAAD,EAAUW,YAAV,EAAwBlD,mBAAmB,CAACD,eAAe,CAACE,eAAD,CAAhB,CAA3C,CAAlB;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport axios from 'axios'\r\nexport const Axios = axios.create({\r\n  baseURL: '/api',\r\n});\r\n//import    {Axios,serverAxios} from './request'\r\nconst jueapi ='https://extension-ms.juejin.im';\r\nexport const GET_LIST = 'INDEX/GET_GOLD_LIST'\r\nexport const GET_GIT_LIST = 'INDEX/GET_GIT_LIST'\r\nexport const changGoldList = list =>({\r\n  type:GET_LIST,\r\n  list\r\n})\r\nexport const changGitList= list =>({\r\n  type:GET_GIT_LIST,\r\n  list\r\n})\r\nexport const getGoldList = (param,isServer) =>{\r\n  console.log(\r\n    'getGoldList-------'\r\n  )\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState )=>{\r\n        //http://localhost:9090\r\n        let url = '/resources/gold'\r\n        if(isServer){\r\n          url=jueapi+url\r\n        }\r\n        return Axios.post(url,param)\r\n        .then(res=>{\r\n             const {data} = res.data\r\n             console.log(\r\n             '-------------'\r\n            )\r\n            \r\n             dispatch(changGoldList(data))\r\n        })\r\n    }\r\n}\r\nexport const getGitList = (param) =>{\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState )=>{\r\n        //http://localhost:9090\r\n        return Axios.get('/resources/github')\r\n        .then(res=>{\r\n             const {list} = res.data\r\n             dispatch(changeList(list))\r\n        })\r\n    }\r\n}\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0,\r\n  GOLD_LIST:[],\r\n  GIT_LIST:[],\r\n}\r\n\r\nexport const actionTypes = {\r\n  TICK: 'TICK',\r\n  INCREMENT: 'INCREMENT',\r\n  DECREMENT: 'DECREMENT',\r\n  RESET: 'RESET'\r\n}\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    case GET_LIST:\r\n      return Object.assign({}, state, {\r\n        GOLD_LIST: action.list\r\n      })\r\n    case GET_GIT_LIST:\r\n        return Object.assign({}, state, {\r\n          GIT_LIST: action.list\r\n        })\r\n    default:\r\n       return state\r\n  }\r\n}\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = (isServer) => dispatch => {\r\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\r\n}\r\n\r\nexport const startClock = dispatch => {\r\n  return setInterval(() => {\r\n    // Dispatch `TICK` every 1 second\r\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\r\n  }, 1000)\r\n}\r\n\r\nexport const incrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.INCREMENT })\r\n}\r\n\r\nexport const decrementCount = () => dispatch => {\r\n  return setInterval(() => {\r\n    // Dispatch `TICK` every 1 second\r\n    dispatch({ type: actionTypes.DECREMENT })\r\n  }, 5000) \r\n}\r\n\r\nexport const resetCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.RESET })\r\n}\r\n\r\nexport function initializeStore (initialState = exampleInitialState) {\r\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware )))\r\n}"]},"metadata":{},"sourceType":"module"}