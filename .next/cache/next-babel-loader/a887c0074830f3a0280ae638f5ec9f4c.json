{"ast":null,"code":"import \"antd/lib/menu/style/css\";\nimport _Menu from \"antd/lib/menu\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport \"antd/lib/layout/style/css\";\nimport _Layout from \"antd/lib/layout\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { startClock, serverRenderClock, getGoldList, changGoldList, changGitList, Axios } from '../store';\nimport Examples from '../components/examples';\nimport LayoutA from '../index.js';\nimport './index.css';\nconst {\n  Header,\n  Content,\n  Footer\n} = _Layout;\n\nlet getlist = (url, param) => {\n  return new _Promise((resolve, reject) => {\n    Axios.post(url, param).then(res => {\n      const {\n        data\n      } = res.data;\n      resolve(data);\n    });\n  });\n};\n\nclass Index extends React.Component {\n  static getInitialProps({\n    reduxStore,\n    req\n  }) {\n    const isServer = !!req;\n    reduxStore.dispatch(serverRenderClock(isServer));\n    let p1 = getlist('https://extension-ms.juejin.im/resources/gold', {\n      category: \"frontend\",\n      limit: 30,\n      offset: 0,\n      order: \"time\"\n    });\n    let p2 = getlist('https://extension-ms.juejin.im/resources/github', {\n      \"category\": \"upcome\",\n      \"period\": \"day\",\n      \"lang\": \"javascript\",\n      \"offset\": 0,\n      \"limit\": 30\n    });\n    return _Promise.all([p1, p2]).then(result => {\n      //['成功了', 'success']\n      reduxStore.dispatch(changGoldList(result[0]));\n      reduxStore.dispatch(changGitList(result[1]));\n      return {\n        GOLD_LIST: reduxStore.getState()['GOLD_LIST'],\n        GIT_LIST: reduxStore.getState()['GIT_LIST']\n      };\n    }).catch(error => {\n      console.log(error);\n    });\n    return Axios.post('https://extension-ms.juejin.im/resources/gold', {\n      category: \"frontend\",\n      limit: 30,\n      offset: 0,\n      order: \"time\"\n    }).then(res => {\n      const {\n        data\n      } = res.data;\n      reduxStore.dispatch(changGoldList(data));\n      return {\n        GOLD_LIST: reduxStore.getState()['GOLD_LIST']\n      };\n    });\n  }\n\n  componentDidMount() {\n    const {\n      dispatch,\n      GOLD_LIST,\n      GIT_LIST\n    } = this.props; // this.timer = startClock(dispatch)\n    // dispatch(getGoldList({\n    //   category: \"frontend\",\n    //   limit: 30,\n    //   offset: 0,\n    //   order: \"time\"\n    // }))\n  }\n\n  componentWillUnmount() {//clearInterval(this.timer)\n  }\n\n  render() {\n    const {\n      GOLD_LIST,\n      state\n    } = this.props;\n    return __jsx(_Layout, {\n      id: \"components-layout-demo-fixed\"\n    }, __jsx(Header, {\n      style: {\n        position: 'fixed',\n        zIndex: 1,\n        width: '100%'\n      }\n    }, __jsx(\"div\", {\n      className: \"logo\"\n    }), __jsx(_Menu, {\n      theme: \"dark\",\n      mode: \"horizontal\",\n      defaultSelectedKeys: ['2'],\n      style: {\n        lineHeight: '64px'\n      }\n    }, __jsx(_Menu.Item, {\n      key: \"1\"\n    }, \"nav 1\"), __jsx(_Menu.Item, {\n      key: \"2\"\n    }, \"nav 2\"), __jsx(_Menu.Item, {\n      key: \"3\"\n    }, \"nav 3\"))), __jsx(\"div\", {\n      className: \"main-area\"\n    }, __jsx(\"div\", {\n      className: \"source gold-source\"\n    }, __jsx(\"div\", {\n      className: \"entry-list\"\n    }, __jsx(Examples, null), __jsx(\"ul\", {\n      className: \"list\"\n    }, GOLD_LIST.map(item => {\n      return __jsx(\"li\", {\n        key: item.id,\n        className: \"item\"\n      }, __jsx(\"a\", {\n        href: item.url,\n        target: \"_blank\",\n        className: \"item-content\"\n      }, __jsx(\"div\", {\n        className: \"badge\",\n        title: '至少已有' + item.collectionCount + '人喜欢'\n      }, __jsx(\"div\", {\n        className: \"icon ion-arrow-up-b\"\n      }), __jsx(\"div\", {\n        className: \"text\"\n      }, item.collectionCount)), __jsx(\"div\", {\n        className: \"entry-info\"\n      }, __jsx(\"div\", {\n        className: \"title\",\n        title: item.title\n      }, item.title), __jsx(\"div\", {\n        className: \"meta\"\n      }, __jsx(\"div\", {\n        className: \"list\"\n      }, __jsx(\"div\", {\n        className: \"meta-item\"\n      }, __jsx(\"span\", {\n        className: \"text\",\n        title: \"Fri, 03 Jan 2020 14:02:46 GMT\"\n      }, \"2\\u5C0F\\u65F6\\u524D\")), __jsx(\"div\", {\n        className: \"meta-item\"\n      }, __jsx(\"span\", {\n        className: \"text\",\n        title: '访问' + item.user.username + '的主页'\n      }, item.user.username)))))));\n    })))), __jsx(\"div\", {\n      className: \"source other-source\"\n    }, __jsx(\"div\", {\n      className: \"entry-list\"\n    }, __jsx(\"ul\", {\n      className: \"list\"\n    }, __jsx(\"li\", {\n      className: \"item-row\"\n    }, \"33\"))))), __jsx(Footer, {\n      style: {\n        textAlign: 'center'\n      }\n    }, \"Ant Design \\xA92018 Created by Ant UED\"));\n  }\n\n}\n\nexport default connect(state => ({\n  GOLD_LIST: state.GOLD_LIST,\n  state,\n  GIT_LIST: state.GIT_LIST\n}))(Index);","map":{"version":3,"sources":["D:/zcy/20198222/next-xitu/pages/index.js"],"names":["React","connect","startClock","serverRenderClock","getGoldList","changGoldList","changGitList","Axios","Examples","LayoutA","Header","Content","Footer","getlist","url","param","resolve","reject","post","then","res","data","Index","Component","getInitialProps","reduxStore","req","isServer","dispatch","p1","category","limit","offset","order","p2","all","result","GOLD_LIST","getState","GIT_LIST","catch","error","console","log","componentDidMount","props","componentWillUnmount","render","state","position","zIndex","width","lineHeight","map","item","id","collectionCount","title","user","username","textAlign"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {startClock, serverRenderClock,getGoldList,changGoldList,changGitList,Axios} from '../store'\r\nimport Examples from '../components/examples'\r\nimport LayoutA from '../index.js'\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport './index.css'\r\nconst { Header, Content, Footer } = Layout;\r\nlet getlist = (url,param) => {\r\n  return new Promise((resolve, reject) => {\r\n    Axios.post(url,param)\r\n    .then(res=>{\r\n         const {data} = res.data\r\n         resolve(data)\r\n    })  \r\n  })\r\n}\r\n\r\nclass Index extends React.Component {\r\n    static getInitialProps ({ reduxStore, req }) {\r\n    const isServer = !!req\r\n    reduxStore.dispatch(serverRenderClock(isServer))\r\n \r\n    let  p1=getlist('https://extension-ms.juejin.im/resources/gold',{\r\n      category: \"frontend\",\r\n      limit: 30,\r\n      offset: 0,\r\n      order: \"time\"\r\n    })\r\n    let  p2=getlist('https://extension-ms.juejin.im/resources/github',{\r\n      \"category\":\"upcome\",\r\n      \"period\":\"day\",\r\n      \"lang\":\"javascript\",\r\n      \"offset\":0,\r\n      \"limit\":30\r\n    })\r\n    return Promise.all([p1, p2]).then((result) => {\r\n                    //['成功了', 'success']\r\n                    reduxStore.dispatch(changGoldList(result[0]))\r\n                    reduxStore.dispatch(changGitList(result[1]))\r\n                    return  {\r\n                       GOLD_LIST: (reduxStore.getState())['GOLD_LIST'],\r\n                       GIT_LIST: (reduxStore.getState())['GIT_LIST']\r\n                      }\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n    return Axios.post('https://extension-ms.juejin.im/resources/gold',{\r\n      category: \"frontend\",\r\n      limit: 30,\r\n      offset: 0,\r\n      order: \"time\"\r\n    })\r\n    .then(res=>{\r\n         const {data} = res.data\r\n         reduxStore.dispatch(changGoldList(data))\r\n        \r\n         return  { GOLD_LIST: (reduxStore.getState())['GOLD_LIST']}\r\n    })  \r\n  }\r\n\r\n  componentDidMount () {\r\n    const {dispatch,GOLD_LIST,GIT_LIST} = this.props\r\n    \r\n   // this.timer = startClock(dispatch)\r\n    // dispatch(getGoldList({\r\n    //   category: \"frontend\",\r\n    //   limit: 30,\r\n    //   offset: 0,\r\n    //   order: \"time\"\r\n    // }))\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    //clearInterval(this.timer)\r\n  }\r\n\r\n  render () {\r\n   const {GOLD_LIST,state} = this.props;\r\n \r\n    return (\r\n \r\n          <Layout id=\"components-layout-demo-fixed\">\r\n           \r\n          <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n                <div className=\"logo\" />\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"horizontal\"\r\n                    defaultSelectedKeys={['2']}\r\n                    style={{ lineHeight: '64px' }}\r\n                >\r\n                    <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n                    <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n                    <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n                </Menu>\r\n            </Header> \r\n            <div  className=\"main-area\">\r\n              <div className=\"source gold-source\">\r\n                  <div className=\"entry-list\">\r\n                  <Examples/>\r\n                  \r\n                    <ul className=\"list\">\r\n                        {GOLD_LIST.map(item=>{\r\n                           return <li key={item.id} className=\"item\">\r\n                               <a href={item.url} target=\"_blank\" className=\"item-content\">\r\n                                  <div className=\"badge\"   title={'至少已有'+item.collectionCount+'人喜欢'}>\r\n                                    <div className=\"icon ion-arrow-up-b\" ></div>\r\n                                    <div className=\"text\">{item.collectionCount}</div>\r\n                                  </div>\r\n                                  <div className=\"entry-info\">\r\n                                    <div className=\"title\"  title={item.title}>{item.title}</div>\r\n                                    <div className=\"meta\"  >\r\n                                          <div className=\"list\"  >\r\n                                              <div className=\"meta-item\">\r\n                                                <span className=\"text\" title=\"Fri, 03 Jan 2020 14:02:46 GMT\">2小时前</span>\r\n                                              </div>\r\n                                              <div className=\"meta-item\">\r\n                        <span className=\"text\" title={'访问'+item.user.username+'的主页'}>{item.user.username}</span>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                                </a>\r\n                           </li>\r\n                        })}\r\n                    </ul>\r\n                  </div>\r\n              </div>\r\n              <div className=\"source other-source\">\r\n                  <div className=\"entry-list\">\r\n                      <ul className=\"list\">\r\n                          <li className=\"item-row\">\r\n                              33\r\n                           </li>\r\n                      </ul>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n    \r\n            <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>                                                                \r\n          </Layout>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default connect( \r\n  state => ({ GOLD_LIST: state.GOLD_LIST,state,GIT_LIST: state.GIT_LIST })\r\n \r\n)(Index)"]},"metadata":{},"sourceType":"module"}