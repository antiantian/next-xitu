{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.a34a207e68e4287ebaf1.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport axios from 'axios'\r\nconst Axios = axios.create({\r\n  baseURL: '/api',\r\n});\r\n//import    {Axios,serverAxios} from './request'\r\nconst GET_LIST = 'INDEX/GET_GOLD_LIST'\r\nconst changGoldList = list =>({\r\n  type:GET_LIST,\r\n  list\r\n})\r\nexport const getGoldList = (param) =>{\r\n  console.log(\r\n    'getGoldList'\r\n  )\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState )=>{\r\n        //http://localhost:9090\r\n        return Axios.post('/resources/gold',param)\r\n        .then(res=>{\r\n             const {data} = res.data\r\n          \r\n             dispatch(changGoldList(data))\r\n        })\r\n    }\r\n}\r\nexport const getGitList = (param) =>{\r\n  //  const  HttpGet = server?serverAxios:Axios;\r\n    return (dispatch,getState )=>{\r\n        //http://localhost:9090\r\n        return Axios.get('/resources/github')\r\n        .then(res=>{\r\n             const {list} = res.data\r\n             dispatch(changeList(list))\r\n        })\r\n    }\r\n}\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0,\r\n  GOLD_LIST:[]\r\n}\r\n\r\nexport const actionTypes = {\r\n  TICK: 'TICK',\r\n  INCREMENT: 'INCREMENT',\r\n  DECREMENT: 'DECREMENT',\r\n  RESET: 'RESET'\r\n}\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    case GET_LIST:\r\n      return Object.assign({}, state, {\r\n        GOLD_LIST: action.list\r\n      })\r\n    default: return state\r\n  }\r\n}\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = (isServer) => dispatch => {\r\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\r\n}\r\n\r\nexport const startClock = dispatch => {\r\n  return setInterval(() => {\r\n    // Dispatch `TICK` every 1 second\r\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\r\n  }, 1000)\r\n}\r\n\r\nexport const incrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.INCREMENT })\r\n}\r\n\r\nexport const decrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.DECREMENT })\r\n}\r\n\r\nexport const resetCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.RESET })\r\n}\r\n\r\nexport function initializeStore (initialState = exampleInitialState) {\r\n  return createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware )))\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;AACA;AAOA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AAAA;AAtBA;AAwBA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AACA;;;;A","sourceRoot":""}